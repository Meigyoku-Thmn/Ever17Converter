// how to read:
// <data type> {<number of element to read>} - <name> - <description>
// <data type> is based on C++ std type
// if <number of element to read> is greater than 1 then you have to read an array of <data type>

// start of file - header
char   {4}  - magic            - Magic Code, should be "SC3\0"
uint32 {1}  - textTableOffset  - Text table offset (the "text" section actually has some codes in it)
uint32 {1}  - graphicsTableOffset -  Graphics table offset (point to the "graphics" section that contains names of background images)
// passed 12 bytes
uint32 {1}  - headerSize - can be treated as header size, this point is the start of a jump table (contained in header)


// jump table
uint32 {(headerSize - 12) / 4} - jumpTable - the jump table offset array, each points to a "code" routine

// text table
uint32 {(graphicsTableOffset - textTableOffset) / 4} - textTable - the text table offset array, each points to a "text" routine

// graphics table
uint32 {(fileSize - graphicsTableOffset) / 4} - graphicsTable - the graphics table offset array, each points to a graphics description

// code routine
// this one is hard to describe, it's a chain of opcodes
varop:
    byte {1}  - arg0
    byte {1}  - arg1
    byte {1}  - arg2
    byte {1}  - arg3
    short {1} - operator
    byte {1}  - arg4
    


// text routine
// this one too, it's also a chain of opcodes