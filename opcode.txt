# blocking command: lệnh có tính chất chờ (chờ một cái gì đó ví dụ chờ hiệu ứng kết thúc, chờ âm thanh kết thúc)
# fast forward skip tất cả transition anim và voice, nhưng không skip sfx và music
jump(string fileName)
   lệnh nhảy 'vô điều kiện' tới file script có tên là fileName
   lệnh này "có thể" cancel SFX, cần tìm hiểu thêm
playBGM(expr num, expr volume)
   play nhạc nền, tên file nhạc nền: String.format("bgm%02d", num)
   cancel hết toàn bộ sfx hiện hành
stopBGM()
   dừng nhạc nền hiện hành
playSFX(string fileName, expr a1, expr volume)
   play sfx
   nếu fileName có chữ "l" ở cuối thì tức là sfx dùng để lặp liên tục
   a1: ?? (game sử dụng 0 và 1) => có thể bỏ qua
   volume: âm lượng
   lệnh sau sẽ cancel hiệu quả của lệnh trước, ngoại trừ trường hợp lệnh trước là loop
   nếu lệnh sau là loop thì sẽ cancel lệnh trước nếu lệnh trước cũng là loop (đây là phỏng đoán, chứ trong game không xảy ra trường hợp này)
   thường thì đã là lệnh loop thì bắt buộc phải dùng stopSFX để cancel
   nếu không phải loop thì lệnh này cũng sẽ bị cancel trong một số trường hợp khác
stopSFX()
   tắt sfx, kể cả loop sfx
waitForSFX()
   chờ cho sfx kết thúc, không hoạt động với loop sfx
   luôn luôn cancel sfx sau khi hết lệnh
   blocking command
playVoice(string fileName)
   play voice file
   blocking command, luôn luôn tự cancel sau khi hết lệnh
unknown09()
   không rõ, luôn theo sau lệnh playVoice, có thể bỏ qua
gotoif(...)
   sẽ viết docs sau
bgload(int padding, string bgname, expr a1, expr a2)
   nạp bg
   blocking command, chạy hiệu ứng transition tùy thuộc vào a1 và a2 (đã được viết doc riêng)
   nếu có textbox đang hiển thị thì sẽ tự động phát sinh lệnh hideTextbox trước khi chính nó thực thi
   một số bg có gây hiệu ứng ambient light cho fg, bg nào có ambient light thì đều được hardcode trong game exe
removeBG(expr mode, expr a1, expr a2)
   gỡ bỏ bg
   mode = 1 => đổi sang nền trắng, mode = 0 => đổi sang nền đen
   blocking command, chạy hiệu ứng transition tùy thuộc vào a1 và a2 (đã được viết doc riêng)
fgload(expr id, int padding, string fgname, expr dx, expr useTransitionAnim) 
   nạp fg thế chỗ vào fg trước đó dựa trên id, nếu không có thì nạp fg và đăng kí id
   id chỉ nằm trong {1, 2, 4}, mặc định số nhỏ thì fg ưu tiên nằm trên, số lớn thì fg ưu tiên nằm dưới
   blocking command, chạy hiệu ứng transition
   fg hiện lên có tọa độ trục hoành là dx, pivot point là chính giữa nv theo chiều ngang
   tọa độ trục tung luôn luôn là mép dưới màn hình, pivot point cũng là mép dưới nv
   tọa độ tính theo độ phân giải 640 px chiều ngang, sau đó được upscale lên độ phân giải 800 px
   useTransitionAnim = 3 => có sử dụng hiệu ứng chuyển
   useTransitionAnim = 0 => không sử dụng hiệu ứng chuyển
removeFG(expr id, expr useTransitionAnim)
   gỡ bỏ fg trước đó dựa trên id
   blocking command, chạy hiệu ứng transition
   useTransitionAnim = 3 => có sử dụng hiệu ứng chuyển
   useTransitionAnim = 0 => không sử dụng hiệu ứng chuyển
multifgload2(expr id1, expr id2, int padding1, string fgname1, int padding2, string fgname2, expr dx1, expr dx2, expr useTransitionAnim)
   như fgload nhưng cho 2 fg cùng một lúc
   blocking command
multiremoveFG(byte unk1, byte unk2, byte padding, expr useTransitionAnim)
   multiremoveFG 87 04 00 3 // remove 1 2 4
   multiremoveFG 83 04 00 3 // remove 1 2
   multiremoveFG 85 04 00 3 // remove 1 4
   multiremoveFG 86 04 00 0 // remove 2 4
   blocking command, chạy hiệu ứng transition   
   useTransitionAnim = 3 => có sử dụng hiệu ứng chuyển
   useTransitionAnim = 0 => không sử dụng hiệu ứng chuyển
setFGLayerOrder(expr a1, expr a2, expr a3)
   sắp xếp lại thứ tự render của các fg
   setFGLayerOrder 0 1 2 // render 4 => 2 => 1 (mặc định)
   setFGLayerOrder 0 2 1 // render 2 => 4 => 1
   setFGLayerOrder 1 0 2 // render 4 => 1 => 2
   setFGLayerOrder 1 2 0 // render 1 => 4 => 2
   setFGLayerOrder 2 0 1 // render 2 => 1 => 4
   setFGLayerOrder 2 1 0 // render 1 => 2 => 4
   setFGLayerOrder 0 1 255 // render 4 => 2 => 1 
   setFGLayerOrder 1 0 255 // không quan trọng vì trong trường hợp này fg nv không đè nhau
   TODO: check bug fg render order cho s_2a đến s_2b

delay(expr a1)
   delay trong vòng a1 frame hình trên giây, trong Visual Novel này thì 1 giây có 60 frame
showTextbox()
   hiển thị textbox
hideTextbox()
   ẩn textbox
goto(short offset)
   chính là lệnh waitForSFX nếu đằng sau không có 0x10
   nhảy 'vô điều kiện' tới 1 địa điểm trong script hiện hành
